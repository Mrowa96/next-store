{
  "root": true,
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/strict-type-checked",
    "plugin:@typescript-eslint/stylistic-type-checked",
    "plugin:react/recommended",
    "plugin:react/jsx-runtime",
    "plugin:react-hooks/recommended",
    "plugin:@next/next/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": ["./tsconfig.json"]
  },
  "plugins": ["@typescript-eslint"],
  "env": {
    "node": true,
    "browser": true
  },
  "rules": {
    "func-names": ["error", "as-needed"],
    "no-console": [
      "error",
      {
        "allow": ["warn", "error", "info", "time", "timeEnd", "table"]
      }
    ],
    "react/boolean-prop-naming": "error",
    "react/button-has-type": "error",
    "react/destructuring-assignment": [
      "error",
      "always",
      {
        "destructureInSignature": "always"
      }
    ],
    "react/prefer-stateless-function": "error",
    "react/no-unstable-nested-components": "error",
    "react/jsx-pascal-case": "error",
    "react/jsx-no-leaked-render": [
      "error",
      {
        "validStrategies": ["coerce", "ternary"]
      }
    ],
    "react/function-component-definition": [
      "error",
      {
        "namedComponents": "function-declaration",
        "unnamedComponents": "arrow-function"
      }
    ],
    "import/no-cycle": "error",
    "import/first": "error",
    "import/newline-after-import": "error",
    "import/order": "off",
    "@typescript-eslint/consistent-type-imports": [
      "error",
      {
        "prefer": "type-imports",
        "fixStyle": "inline-type-imports"
      }
    ],
    "@typescript-eslint/consistent-type-definitions": ["error", "type"],
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "args": "all",
        "argsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-floating-promises": [
      "error",
      {
        "ignoreIIFE": true
      }
    ],
    "@typescript-eslint/no-misused-promises": [
      "error",
      {
        "checksVoidReturn": false
      }
    ],
    "@typescript-eslint/restrict-template-expressions": [
      "error",
      {
        "allowNumber": true
      }
    ],
    // We have to disable it because server actions needs to be async even if they don't use promises inside
    "@typescript-eslint/require-await": "off",
    "@typescript-eslint/prefer-nullish-coalescing": [
      "error",
      {
        "ignorePrimitives": {
          "string": true,
          "number": true
        }
      }
    ]
  },
  "overrides": [
    {
      "files": ["**/*.d.ts"],
      "rules": {
        // Needed because sometimes we have to use `interface`
        "@typescript-eslint/consistent-type-definitions": "off"
      }
    }
  ],
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "typescript": true
    }
  },
  "ignorePatterns": [".next", "node_modules", "next.config.mjs", "prettier.config.mjs"]
}
